{"version":3,"file":"static/js/107.6c80f244.chunk.js","mappings":"kPACA,EAAwB,wBAAxB,EAAuD,uBAAvD,EAAsF,wBAAtF,EAAuH,yB,SCgEvH,MA3DA,WACI,OAAwBA,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAAlE,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAACC,GAClB,MAAwBA,EAAMC,cAAtBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACdN,GAAQ,SAAAO,GAAS,yBAAUA,GAAV,cAAsBX,EAAOU,QAU5CV,EAA0BG,EAA1BH,KAAMC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAEnB,OACI,4BACI,eAAIU,UAAWC,EAAf,uBACJ,kBAAMD,UAAWC,EAAQC,SAXR,SAACN,GAClBA,EAAMO,iBACNV,EAASW,EAAAA,EAAAA,SAAoBb,IAC7BC,EAAQ,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,MAQzC,WACQ,qCACI,kBAAOU,UAAWC,EAC1BI,KAAK,OACHjB,KAAK,OACLU,MAAOV,EACPkB,SAAUX,EACVY,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAEN,sCACI,kBAAOT,UAAWC,EAC1BI,KAAK,QACLjB,KAAK,QACLmB,QAAQ,mDACRC,MAAM,wBACNC,UAAQ,EACRX,MAAOT,EACPiB,SAAUX,QAEN,yCACI,kBAAOK,UAAWC,EAC1BI,KAAK,WACLjB,KAAK,WACLqB,UAAQ,EACRX,MAAOR,EACPgB,SAAUX,EACVe,aAAa,YAIT,mBAAQV,UAAWC,EAAUI,KAAK,SAAlC","sources":["webpack://react-homework-template/./src/pages/Register/Register.module.css?12fc","pages/Register/Register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Register_title__4r11G\",\"form\":\"Register_form__c8aUa\",\"input\":\"Register_input__d+3tu\",\"button\":\"Register_button__wRvqA\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport operations from 'redux/auth/auth-operations';\nimport s from './Register.module.css';\n\n\nfunction Register() {\n    const [form, setForm] = useState({ name: '', email: '', password: '' });\n    const dispatch = useDispatch();\n    \n    const handleChange = (event) => {\n        const { name, value } = event.currentTarget;\n        setForm(prevState => ({ ...prevState, [name]: value }));\n\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        dispatch(operations.register(form))\n        setForm({ name: '', email: '', password: '' })\n    };\n\n  const { name, email, password } = form;\n\n    return (\n        <div>\n            <h1 className={s.title}>Register</h1>\n        <form className={s.form} onSubmit={handleSubmit}>\n                <label>Name\n                    <input className={s.input}\n            type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required/>\n                </label>\n                <label>Email\n                    <input className={s.input}\n            type=\"email\"\n            name=\"email\"\n            pattern=\"([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})\"\n            title=\"Example user@mail.com\"\n            required\n            value={email}\n            onChange={handleChange}/>\n                </label>\n                <label>Password\n                    <input className={s.input}\n            type=\"password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={handleChange}\n            autoComplete='off'\n        \n                    />\n                </label>\n                <button className={s.button} type=\"submit\">Register</button>\n            </form>\n            </div>\n)\n}\n\nexport default Register;"],"names":["useState","name","email","password","form","setForm","dispatch","useDispatch","handleChange","event","currentTarget","value","prevState","className","s","onSubmit","preventDefault","operations","type","onChange","pattern","title","required","autoComplete"],"sourceRoot":""}