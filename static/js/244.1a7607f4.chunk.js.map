{"version":3,"file":"static/js/244.1a7607f4.chunk.js","mappings":"2MACA,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA6F,4B,6BCoF7F,MA7EA,WACA,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eACQC,GAASC,EAAAA,EAAAA,MAATD,KAEAE,EAAoB,SAACC,GACzB,MAAwBA,EAAMC,cAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MAEF,IAAK,SACHR,EAAUQ,GACV,MAEF,QACE,SAgBCC,EAAQ,WACZX,EAAQ,IACTE,EAAU,KAGR,OAEM,kBAAMU,UAAWC,EAAQC,SAnBhB,SAACN,GAGpB,GAFCA,EAAMO,iBAEHV,EAAKW,MACC,SAAAC,GAAO,OAAIA,EAAQlB,KAAKmB,gBAAkBnB,EAAKmB,iBAEvD,OAAOC,EAAAA,GAAAA,MAAA,UAAepB,EAAf,4BACNK,EAAW,CAAEL,KAAAA,EAAME,OAAAA,IACbkB,EAAAA,GAAAA,QAAc,kBACpBR,KAUO,WACJ,qCAEI,kBACES,YAAY,QACZR,UAAWC,EACXQ,KAAK,OACLtB,KAAK,OACLW,MAAOX,EACPuB,SAAUf,EACVgB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAIZ,uCAEE,kBACEL,YAAY,aACZR,UAAWC,EACXQ,KAAK,MACLtB,KAAK,SACLW,MAAOT,EACPqB,SAAUf,EACVgB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAIZ,mBAAQb,UAAWC,EAAUQ,KAAK,SAAlC,6B,UChFGK,EAAY,SAAAC,GAAK,OAAIA,EAAMC,QCCxC,EAAuB,0BAAvB,EAA0D,4BCyB1D,MApBA,YAA4C,IAArB7B,EAAoB,EAApBA,KAAME,EAAc,EAAdA,OAAQ4B,EAAM,EAANA,GACjC,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwBC,EAAxB,KAAwBA,UAMxB,OACI,gBAAIpB,UAAWC,EAAf,WAAuB,yBAAId,EAAJ,KAAYE,MACnC,mBAAQgC,SAAUD,EAAWpB,UAAWC,EAAUqB,QAPjC,WACjBH,EAAcF,GACNV,EAAAA,GAAAA,QAAc,qBAKmDE,KAAK,SAA9E,SAAwFW,EAAY,cAAgB,eCd5H,EAAuB,0BCoCvB,MA7BA,WACI,IAAQ3B,GAASC,EAAAA,EAAAA,MAATD,KACFuB,GAASO,EAAAA,EAAAA,IAAYT,GAWvBU,EARW,KAAXR,EACKvB,EAGFA,EAAKuB,QAAO,SAAAX,GAAO,OACxBA,EAAQlB,KAAKmB,cAAcmB,SAAST,EAAOV,kBAKxC,OACD,eAAIN,UAAWC,EAAf,SACKuB,GAAYA,EAASE,KAAI,gBAAGT,EAAH,EAAGA,GAAI9B,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACtB,SAAC,EAAD,CAEI4B,GAAIA,EACJ9B,KAAMA,EACNE,OAAQA,GAHH4B,SC1BzB,EAAwB,sBAAxB,EAAsD,sB,UCoBtD,MAfA,WACE,IAAMU,GAAWC,EAAAA,EAAAA,MACX9B,GAAQyB,EAAAA,EAAAA,IAAYT,GAMxB,OACI,mBAAOd,UAAWC,EAAlB,mCACE,kBAAOD,UAAWC,EAASQ,KAAK,OAAOX,MAAOA,EAAOY,SAN5C,SAACd,GAChB+B,GAASE,EAAAA,EAAAA,GAAajC,EAAMC,cAAcC,eCK9C,MAZA,WACI,OACI,4BACI,uCACR,SAAC,EAAD,KACG,sCACC,SAAC,EAAD,KACC,SAAC,EAAD","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from \"react\";\nimport s from './ContactForm.module.css';\nimport { toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useAddContactsMutation, useGetContactsQuery } from 'redux/contacts/contactsOperation';\n\nfunction ContactForm() {\nconst [name, setName] = useState('');\nconst [number, setNumber] = useState('');\nconst [addContact] = useAddContactsMutation();\nconst { data } = useGetContactsQuery();\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n const hanleSubmit = (event) => {\n   event.preventDefault();\n   \n  if (data.find(\n            contact => contact.name.toLowerCase() === name.toLowerCase()\n          )) {\n    return toast.error(`${name} is already in contacts`);\n   } addContact({ name, number });\n           toast.success('Contact added!');\n     reset();\n    }\n    \n   const reset = () => {\n     setName('');\n    setNumber('')\n  }\n  \n      return (\n          \n            <form className={s.form} onSubmit={hanleSubmit}>\n        <label>\n          Name\n            <input\n              placeholder=\"Lenka\"\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleInputChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n\n          <label>\n            Number\n            <input\n              placeholder=\"0636909298\"\n              className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={handleInputChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n\n          <button className={s.button} type=\"submit\">Add contact</button>\n            </form>\n        )\n};\n\nexport default ContactForm;","export const getFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"button\":\"ContactItem_button__IRFBz\"};","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\nimport { toast } from 'react-toastify';\n\nimport { useDeleteContactsMutation } from 'redux/contacts/contactsOperation';\n\nfunction ContactItem({ name, number, id }) {\n    const [deleteContact, { isLoading }] = useDeleteContactsMutation();\n    const deleteNumber = () => {\n        deleteContact(id)\n                toast.success('Contact deleted!');\n    }\n\n    return (\n        <li className={s.item}><p>{name}: {number}</p>\n        <button disabled={isLoading} className={s.button} onClick={deleteNumber} type=\"button\">{isLoading ? 'Deleting...' : 'Delete'}</button></li>\n    )\n    \n}\n\nContactItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n}\n\nexport default ContactItem;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useSelector } from 'react-redux';\nimport { getFilter } from \"redux/contacts/selectors\";\nimport { useGetContactsQuery } from 'redux/contacts/contactsOperation';\n\n\nimport ContactItem from \"components/ContactItem\";\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n    const { data } = useGetContactsQuery();\n    const filter = useSelector(getFilter);\n\n  const getContacts = () => {\n    if (filter === '') {\n      return data;\n    }\n\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const contacts = getContacts();\n  \n         return (\n        <ul className={s.list}>\n            {contacts && contacts.map(({ id, name, number }) => (\n                <ContactItem\n                    key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                />\n           ))} \n            </ul>\n        )  \n};\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {getFilter} from 'redux/contacts/selectors';\nimport { changeFilter } from \"redux/contacts/slice\";\n\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n\n  const onChange = (event) => {\n    dispatch(changeFilter(event.currentTarget.value))\n  }\n\n    return (\n        <label className={s.label}>Find contacts by name\n          <input className={s.input} type='text' value={value} onChange={onChange}/>\n        </label>\n    )\n}\n\nexport default Filter;","import ContactForm from 'components/ContactForm';\nimport ContactList from \"components/ContactList\";\nimport Filter from \"components/Filter\";\n\nfunction ContactsPage() {\n    return (\n        <div>\n            <h1>Phonebook</h1>\n    <ContactForm />\n       <h2>Contacts</h2>\n        <Filter />\n         <ContactList />\n        </div>\n    )\n};\n\nexport default ContactsPage;"],"names":["useState","name","setName","number","setNumber","useAddContactsMutation","addContact","data","useGetContactsQuery","handleInputChange","event","currentTarget","value","reset","className","s","onSubmit","preventDefault","find","contact","toLowerCase","toast","placeholder","type","onChange","pattern","title","required","getFilter","state","filter","id","useDeleteContactsMutation","deleteContact","isLoading","disabled","onClick","useSelector","contacts","includes","map","dispatch","useDispatch","changeFilter"],"sourceRoot":""}